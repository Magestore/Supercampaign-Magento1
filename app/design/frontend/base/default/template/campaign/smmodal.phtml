<!--campaign/smmodal.phtml-->

<?php $popups = $this->getAllPopupAvailable(); ?>
<?php foreach ($popups as $popup): ?>

    <?php
    //Zend_debug::dump($popup->getData());
    $segmentpopup = Mage::helper('campaign')->checkSegmentpopup();
    $cookiepopup = Mage::helper('campaign')->checkCookiepopup();
    $stylepopup = Mage::helper('campaign')->checkStylepopup();
    ?>

    <div class="<?php echo $popup->getPopupType() ?>">
        <div id="sc-popup<?php echo $popup->getData('template_code') ?>"
             class="modal fade sc-popup<?php echo $popup->getData('template_code') ?>" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <a class="dialogClose style1 overlay2" data-dismiss="modal"
                       data-target="#sc-popup<?php echo $popup->getData('template_code') ?>"></a>
                    <?php echo $popup->getData('popup_content'); ?>
                </div>
            </div>
        </div>
    </div>
    <?php
    $style_plus = "";
    $border_color = "border-color:#" . $popup->getData('border_color') . ";";
    $border_size = "border-width:" . $popup->getData('border_size') . "px;";
    $padding_size = "padding:" . $popup->getData('padding') . "px;";
    $backgroundcolor = $popup->getData('popup_background');
    $overlay_color = $popup->getData('overlay_color');
    switch ($overlay_color) {
        case 'white':
            $bg_overlay = "background-color:#fff;";
            break;
        case 'back':
            $bg_overlay = "background-color:#000;";
            break;
        case 'no_background':
            $bg_overlay = "display:none";
            break;
    }
    $horizontal_position = $popup->getData('horizontal_position');
    $vertical_position = $popup->getData('vertical_position');
    $horizontal_px = $popup->getData('horizontal_px');
    $horizontalpx = "";
    $vertical_px = $popup->getData('vertical_px');
    $verticalpx = "";
    if ($horizontal_px != "0") {
        switch ($horizontal_position) {
            case 'left':
                if ($overlay_color = 'no_background') {
                    $horizontalpx = ".modal{position: fixed;left:" . $horizontal_px . "px;}";
                } else {
                    $horizontalpx = ".modal-dialog{position: fixed;left:" . $horizontal_px . "px;}";
                }
                break;
            case 'center':
                $horizontalpx = "";
                break;
            case 'right':
                if ($overlay_color = 'no_background') {
                    $horizontalpx = ".modal{position: fixed;right:" . $horizontal_px . "px;}";
                } else {
                    $horizontalpx = ".modal-dialog{position: fixed;right:" . $horizontal_px . "px;}";
                }
                break;
        }
    }
    if ($vertical_px != "0") {
        switch ($vertical_position) {
            case 'top':
                if ($overlay_color = 'no_background') {
                    $verticalpx = ".modal{position: fixed;margin-top:" . $vertical_px . "px;}";
                } else {
                    $verticalpx = ".modal-dialog{position: fixed;margin-top:" . $vertical_px . "px;}";
                }
                break;
            case 'bottom':
                if ($overlay_color = 'no_background') {
                    $verticalpx = "position: fixed;margin-bottom:" . $vertical_px . "px;";
                } else {
                    $verticalpx = ".modal-dialog{position: fixed;margin-bottom:" . $vertical_px . "px;}";
                }
                break;
        }
    }

    $width = "";
    if ($popup->getData('width') != "0" && $popup->getData('width') != "") {
        $width = "width:" . $popup->getData('width') . "px;";
    }
    $maxwidth = "";
    if ($popup->getData('max_width') != "") {
        $maxwidth = "max-width:" . $popup->getData('max_width') . "px;";
    }

    $close_path = $popup->getData('close_style');
    $close_icon = "";
    switch ($close_path) {
        case 'circle':
            if ($overlay_color == 'white') {
                $close_icon = ".dialogClose{background:url(" . $this->getSkinUrl('images/campaign/popup/close_dark.png') . ") no-repeat 5px 5px}";
            } else {
                if ($overlay_color == 'dark') {
                    $close_icon = ".dialogClose{background:url(" . $this->getSkinUrl('images/campaign/popup/close_white.png') . ") no-repeat 5px 5px}";
                }
            }
            break;
        case 'simple':
            $close_icon = ".dialogClose{background:url(" . $this->getSkinUrl('images/campaign/popup/close_promotion.png') . ") no-repeat 5px -20px}";
            break;
        case 'none':
            $close_icon = ".dialogClose{background:none transparent}";
            break;
        default:
            $close_icon = ".dialogClose{background:url(" . $this->getSkinUrl('images/campaign/popup/close_promotion.png') . ") no-repeat 5px -20px}";
    }

    $corner_style = $popup->getData('corner_style');
    switch ($corner_style) {
        case 0:
            $style_plus = "border-radius:" . $popup->getData('border_radius') . "px;";
            break;
        case 1:
            $style_plus = "border-radius:0px;";
            break;
        case 2:
            $style_plus = "border-radius:50%;overflow:hidden;";
            break;
    }
    $stylecontent = "#sc-popup" . $popup->getData('template_code') . "  .modal-content{" . $width . " " . $backgroundcolor . " " . $style_plus . " " . $border_color . " " . $border_size . " " . $padding_size . " " . $maxwidth . "}";
    $styleoverbg = "#sc-popup" . $popup->getData('template_code') . "  .modal-backdrop{" . $bg_overlay . "}";
    //$styledialog = "#sc-popup".$popup->getData('template_code')."  .modal-dialog{".$horizontalpx." ".$verticalpx."}";
    $customcss = $popup->getData('custom_css');
    ?>
    <script type="text/javascript">
        var $j = jQuery.noConflict();
        switch (<?php echo $popup->getData('appear_effect')?>) {
            case 0:
                $j('.modal').prop('class', 'modal fade').addClass('top');
                break;
            case 1:
                $j('.modal').prop('class', 'modal fade').addClass('left');
                break;
            case 2:
                $j('.modal').prop('class', 'modal fade').addClass('right');
                break;
            case 3:
                $j('.modal').prop('class', 'modal fade').addClass('bottom');
                break;
            case 4:
                $j('.modal').prop('class', 'modal fade').addClass('top-left');
                break;
            case 5:
                $j('.modal').prop('class', 'modal fade').addClass('top-right');
                break;
            case 6:
                $j('.modal').prop('class', 'modal fade').addClass('bottom-left');
                break;
            case 7:
                $j('.modal').prop('class', 'modal fade').addClass('bottom-right');
                break;
            default:
                $j('.modal').prop('class', 'modal fade').addClass('top');
        }
        $j(window).bind("load", function () {
            var string = "<style type=\"text/css\"><?php echo $horizontalpx . " " . $verticalpx . " " . $stylecontent . " " . $styledialog . " " . $styleoverbg . " " . $close_icon . " " . $customcss ?></style>"
            $j('head').append(string);
            <?php
            $show_when = $popup->getData('show_when');
            ?>

            showwhen = '<?php echo $show_when ?>';
            console.log(showwhen);
            if (showwhen == 'after_seconds') {
                secondsdelay = 1000 * <?php echo $popup->getData('seconds_delay')?>;
                setTimeout(function () {
                    $j('.modal').modal('show');
                }, secondsdelay);
                console.log(secondsdelay);
            }
            if (showwhen == 'after_load_page') {
                $j('.modal').modal('show');
            }
        });
    </script>
<?php endforeach; ?>

